{"version":3,"file":"sanity-plugin-bynder-input.cjs.production.min.js","sources":["../src/components/VideoPlayer.tsx","../src/components/BynderDiff.tsx","../src/schema/bynder.asset.ts","../src/components/BynderInput.tsx","../src/utils.ts"],"sourcesContent":["import React from 'react';\nimport videojs, { VideoJsPlayer, VideoJsPlayerOptions } from 'video.js';\n\nexport default class VideoPlayer extends React.Component<\n  VideoJsPlayerOptions,\n  any\n> {\n  videoNode?: HTMLVideoElement;\n  player?: VideoJsPlayer;\n  componentDidMount() {\n    this.player = videojs(this.videoNode, this.props);\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <link\n          href=\"https://vjs.zencdn.net/7.8.4/video-js.css\"\n          rel=\"stylesheet\"\n        />\n        <div data-vjs-player style={{ marginBottom: '16px' }}>\n          <video\n            className=\"video-js vjs-16-9 vjs-big-play-centered\"\n            ref={node => {\n              if (node) {\n                this.videoNode = node;\n              }\n            }}\n          ></video>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { DiffFromTo, SchemaType } from '@sanity/field/diff';\nimport styles from './ImagePreview.css';\n\ntype ComponentProps = {\n  value: any;\n};\n\nfunction Component({ value }: ComponentProps) {\n  if (value && value.previewUrl) {\n    return (\n      <div>\n        <img alt=\"preview\" src={value.previewUrl} style={{ width: '100%' }} />\n      </div>\n    );\n  }\n  return (\n    <div className={styles.noImage}>\n      <div>(no image)</div>\n    </div>\n  );\n}\n\ntype DiffProps = {\n  diff: any;\n  schemaType: SchemaType;\n};\n\nconst BynderDiff = ({ diff, schemaType }: DiffProps) => {\n  return (\n    <DiffFromTo\n      diff={diff}\n      schemaType={schemaType}\n      previewComponent={Component}\n    />\n  );\n};\n\nexport default BynderDiff;\n","import BynderInput from '../components/BynderInput';\nimport BynderDiff from '../components/BynderDiff';\n\nexport default {\n  name: 'bynder.asset',\n  type: 'object',\n  title: 'Bynder Asset',\n  fields: [\n    {\n      type: 'string',\n      name: 'id',\n    },\n    {\n      type: 'string',\n      name: 'name',\n    },\n    {\n      type: 'string',\n      name: 'databaseId',\n    },\n    {\n      type: 'string',\n      name: 'type',\n    },\n    {\n      type: 'string',\n      name: 'previewUrl',\n    },\n    {\n      type: 'string',\n      name: 'previewImg',\n    },\n    {\n      type: 'string',\n      name: 'datUrl',\n    },\n    {\n      type: 'string',\n      name: 'description',\n    },\n    {\n      type: 'number',\n      name: 'aspectRatio',\n    },\n    {\n      type: 'string',\n      name: 'videoUrl',\n    },\n  ],\n  inputComponent: BynderInput,\n  diffComponent: BynderDiff,\n  /*\n  preview: {\n    select: {\n      playbackId: 'asset.playbackId',\n      status: 'asset.status',\n      duration: 'asset.data.duration',\n      thumbTime: 'asset.thumbTime',\n      filename: 'asset.filename'\n    },\n    component: Preview\n  }\n  */\n};\n","import React from 'react';\nimport { loadBynder } from '../utils';\nimport PatchEvent, { set, unset } from '@sanity/form-builder/PatchEvent';\nimport pluginConfig from 'config:bynder-input';\nimport ButtonGrid from 'part:@sanity/components/buttons/button-grid';\nimport Button from 'part:@sanity/components/buttons/default';\nimport Fieldset from 'part:@sanity/components/fieldsets/default';\nimport VideoPlayer from './VideoPlayer';\n\ndeclare global {\n  interface Window {\n    BynderCompactView: any;\n  }\n}\n\ntype Props = {\n  type: Record<string, any>;\n  onChange: any;\n  value: Record<string, any>;\n  level: number;\n  readOnly: boolean;\n  markers: any[];\n};\n\nconst BynderInput = (props: Props) => {\n  const removeValue = () => {\n    const { onChange } = props;\n    onChange(PatchEvent.from([unset()]));\n  };\n\n  const getPreviewUrl = (asset: Props['type']) => {\n    switch (asset.type) {\n      case 'VIDEO':\n        return asset.previewUrls[0];\n      default:\n        return asset.files.webImage.url;\n    }\n  };\n\n  const getVideoUrl = (asset: Props['type']) => {\n    if (asset.type === 'VIDEO') {\n      // if original asset is available (public videos only) use that if not fall back to the preview url\n      return asset.files?.original?.url ?? asset.previewUrls[0];\n    }\n    return null;\n  };\n\n  const getAspectRatio = (dimensions: {\n    width: number;\n    height: number;\n  }): number => dimensions.height / dimensions.width;\n\n  const openMediaSelector = () => {\n    const { onChange, type, value } = props;\n    const onSuccess = (assets: any[]) => {\n      const asset = assets[0];\n      const webImage = asset.files.webImage;\n\n      const aspectRatio = getAspectRatio({\n        width: webImage.width,\n        height: webImage.height,\n      });\n      onChange(\n        PatchEvent.from([\n          set({\n            _key: value?._key,\n            _type: type.name,\n            id: asset.id,\n            name: asset.name,\n            databaseId: asset.databaseId,\n            type: asset.type,\n            previewUrl: getPreviewUrl(asset),\n            previewImg: webImage.url,\n            datUrl: asset.files.transformBaseUrl?.url,\n            videoUrl: getVideoUrl(asset),\n            description: asset.description,\n            aspectRatio,\n          }),\n        ])\n      );\n    };\n\n    const options: Record<string, any> = {\n      language: pluginConfig.language || 'en_US',\n      defaultDomain: pluginConfig.portalDomain,\n      theme: {\n        colorPrimary: '#156dff',\n        colorButtonPrimary: '#156dff',\n      },\n      mode: 'SingleSelectFile',\n      onSuccess,\n    };\n\n    const { assetTypes } = type.options;\n    if (assetTypes) {\n      options.assetTypes = assetTypes;\n    }\n\n    loadBynder(() => {\n      window.BynderCompactView.open(options);\n    });\n  };\n\n  const { value, type, markers, level, readOnly } = props;\n\n  let preview;\n  if (value) {\n    if (value.type === 'VIDEO') {\n      preview = (\n        <VideoPlayer\n          controls\n          poster={value.previewImg}\n          sources={[{ src: value.previewUrl }]}\n        />\n      );\n    }\n    if (value.type === 'IMAGE') {\n      preview = (\n        <img\n          alt=\"preview\"\n          src={value.previewUrl}\n          style={{ maxWidth: '100%', height: 'auto' }}\n        />\n      );\n      // TODO: Add preview for document / audio types and empty state\n    }\n  }\n\n  return (\n    <Fieldset\n      markers={markers}\n      //presence={presence.filter(item => item.path[0] === '$' || isInside.includes(item.identity))}\n      legend={type.title}\n      description={type.description}\n      level={level}\n    >\n      <div style={{ textAlign: 'center' }}>{preview}</div>\n\n      <ButtonGrid align=\"start\">\n        <Button\n          disabled={readOnly}\n          inverted\n          title=\"Select an asset\"\n          kind=\"default\"\n          onClick={openMediaSelector}\n        >\n          Browse\n        </Button>\n        <Button\n          disabled={readOnly || !value}\n          color=\"danger\"\n          inverted\n          title=\"Remove asset\"\n          onClick={removeValue}\n        >\n          Remove\n        </Button>\n      </ButtonGrid>\n    </Fieldset>\n  );\n};\n\nexport default BynderInput;\n","const url =\n  'https://d8ejoa1fys2rk.cloudfront.net/5.0.5/modules/compactview/bynder-compactview-2-latest.js';\n\nexport function loadBynder(callback: () => void) {\n  const existingScript = document.getElementById('bynder');\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = url;\n    script.id = 'bynder';\n    document.body.appendChild(script);\n    script.onload = () => {\n      if (callback) {\n        return callback();\n      }\n      return true;\n    };\n  }\n  if (existingScript && callback) {\n    return callback();\n  }\n  return true;\n}\n"],"names":["VideoPlayer","componentDidMount","player","videojs","this","videoNode","props","componentWillUnmount","dispose","render","React","href","rel","style","marginBottom","className","ref","node","_this","Component","value","previewUrl","alt","src","width","noImage","name","type","title","fields","inputComponent","preview","getPreviewUrl","asset","previewUrls","files","webImage","url","getVideoUrl","_asset$files","original","_asset$files$original2","markers","level","readOnly","controls","poster","previewImg","sources","maxWidth","height","Fieldset","legend","description","textAlign","ButtonGrid","align","Button","disabled","inverted","kind","onClick","onChange","options","language","pluginConfig","defaultDomain","portalDomain","theme","colorPrimary","colorButtonPrimary","mode","onSuccess","assets","dimensions","aspectRatio","PatchEvent","from","set","_key","_type","id","databaseId","datUrl","transformBaseUrl","_asset$files$transfor","videoUrl","assetTypes","callback","existingScript","document","getElementById","script","createElement","body","appendChild","onload","loadBynder","window","BynderCompactView","open","color","unset","diffComponent","DiffFromTo","diff","schemaType","previewComponent"],"mappings":"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"}