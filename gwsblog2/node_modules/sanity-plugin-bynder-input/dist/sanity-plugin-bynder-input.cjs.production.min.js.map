{"version":3,"file":"sanity-plugin-bynder-input.cjs.production.min.js","sources":["../src/components/VideoPlayer.tsx","../src/components/BynderDiff.tsx","../src/schema/bynder.asset.ts","../src/components/BynderInput.tsx","../src/utils.ts"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport videojs, { VideoJsPlayer, VideoJsPlayerOptions } from 'video.js';\n\nconst VideoPlayer = (props: VideoJsPlayerOptions) => {\n  const videoNode = useRef<HTMLVideoElement>(null);\n  const [player, setPlayer] = useState<VideoJsPlayer>();\n\n  useEffect(() => {\n    if (videoNode.current) {\n      setPlayer(videojs(videoNode.current, props));\n    }\n    return () => player?.dispose();\n  }, [videoNode]);\n\n  return (\n    <div>\n      <link href=\"https://vjs.zencdn.net/7.8.4/video-js.css\" rel=\"stylesheet\" />\n      <div data-vjs-player style={{ marginBottom: '16px' }}>\n        <video\n          className=\"video-js vjs-16-9 vjs-big-play-centered\"\n          ref={videoNode}\n        ></video>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport { DiffFromTo, SchemaType } from '@sanity/field/diff';\nimport styles from './ImagePreview.css';\n\ntype ComponentProps = {\n  value: any;\n};\n\nfunction Component({ value }: ComponentProps) {\n  if (value && value.previewUrl) {\n    return (\n      <div>\n        <img alt=\"preview\" src={value.previewUrl} style={{ width: '100%' }} />\n      </div>\n    );\n  }\n  return (\n    <div className={styles.noImage}>\n      <div>(no image)</div>\n    </div>\n  );\n}\n\ntype DiffProps = {\n  diff: any;\n  schemaType: SchemaType;\n};\n\nconst BynderDiff = ({ diff, schemaType }: DiffProps) => {\n  return (\n    <DiffFromTo\n      diff={diff}\n      schemaType={schemaType}\n      previewComponent={Component}\n    />\n  );\n};\n\nexport default BynderDiff;\n","import BynderInput from '../components/BynderInput';\nimport BynderDiff from '../components/BynderDiff';\n\nexport default {\n  name: 'bynder.asset',\n  type: 'object',\n  title: 'Bynder Asset',\n  fields: [\n    {\n      type: 'string',\n      name: 'id',\n    },\n    {\n      type: 'string',\n      name: 'name',\n    },\n    {\n      type: 'string',\n      name: 'databaseId',\n    },\n    {\n      type: 'string',\n      name: 'type',\n    },\n    {\n      type: 'string',\n      name: 'previewUrl',\n    },\n    {\n      type: 'string',\n      name: 'previewImg',\n    },\n    {\n      type: 'string',\n      name: 'datUrl',\n    },\n    {\n      type: 'string',\n      name: 'description',\n    },\n    {\n      type: 'number',\n      name: 'aspectRatio',\n    },\n    {\n      type: 'string',\n      name: 'videoUrl',\n    },\n  ],\n  inputComponent: BynderInput,\n  diffComponent: BynderDiff,\n  /*\n  preview: {\n    select: {\n      playbackId: 'asset.playbackId',\n      status: 'asset.status',\n      duration: 'asset.data.duration',\n      thumbTime: 'asset.thumbTime',\n      filename: 'asset.filename'\n    },\n    component: Preview\n  }\n  */\n};\n","import React from 'react';\nimport { loadBynder } from '../utils';\nimport PatchEvent, { set, unset } from '@sanity/form-builder/PatchEvent';\nimport pluginConfig from 'config:bynder-input';\nimport ButtonGrid from 'part:@sanity/components/buttons/button-grid';\nimport Button from 'part:@sanity/components/buttons/default';\nimport Fieldset from 'part:@sanity/components/fieldsets/default';\nimport VideoPlayer from './VideoPlayer';\n\ndeclare global {\n  interface Window {\n    BynderCompactView: any;\n  }\n}\n\ntype Props = {\n  type: Record<string, any>;\n  onChange: any;\n  value: Record<string, any>;\n  level: number;\n  readOnly: boolean;\n  markers: any[];\n};\n\nconst BynderInput = (props: Props) => {\n  const removeValue = () => {\n    const { onChange } = props;\n    onChange(PatchEvent.from([unset()]));\n  };\n\n  const getPreviewUrl = (asset: Props['type']) => {\n    switch (asset.type) {\n      case 'VIDEO':\n        return asset.previewUrls[0];\n      default:\n        return asset.files.webImage.url;\n    }\n  };\n\n  const getVideoUrl = (asset: Props['type']) => {\n    if (asset.type === 'VIDEO') {\n      // if original asset is available (public videos only) use that if not fall back to the preview url\n      return asset.files?.original?.url ?? asset.previewUrls[0];\n    }\n    return null;\n  };\n\n  const getAspectRatio = (dimensions: {\n    width: number;\n    height: number;\n  }): number => dimensions.height / dimensions.width;\n\n  const getVideoAspectRatio = (previewImageUrl: string) =>\n    new Promise((resolve, reject) => {\n      const img = new Image();\n\n      img.onload = () => {\n        resolve(\n          getAspectRatio({\n            width: img.width,\n            height: img.height,\n          })\n        );\n      };\n      img.onerror = err => reject(err);\n\n      img.src = previewImageUrl;\n    });\n\n  const openMediaSelector = () => {\n    const { onChange, type, value } = props;\n    const onSuccess = (assets: any[]) => {\n      const asset = assets[0];\n      const webImage = asset.files.webImage;\n\n      const aspectRatio = getAspectRatio({\n        width: webImage.width,\n        height: webImage.height,\n      });\n      const mediaData = {\n        _key: value?._key,\n        _type: type.name,\n        id: asset.id,\n        name: asset.name,\n        databaseId: asset.databaseId,\n        type: asset.type,\n        previewUrl: getPreviewUrl(asset),\n        previewImg: webImage.url,\n        datUrl: asset.files.transformBaseUrl?.url,\n        videoUrl: getVideoUrl(asset),\n        description: asset.description,\n        aspectRatio,\n      };\n\n      if (asset.type === 'VIDEO') {\n        getVideoAspectRatio(webImage.url)\n          .then(ratio => {\n            onChange(\n              PatchEvent.from([set({ ...mediaData, aspectRatio: ratio })])\n            );\n          })\n          .catch(err => {\n            // video aspect ratio couldn't be set, but should still set the rest of the data\n            console.log('Error setting video aspect ratio:', err);\n            onChange(PatchEvent.from([set(mediaData)]));\n          });\n      } else {\n        onChange(PatchEvent.from([set(mediaData)]));\n      }\n    };\n\n    const options: Record<string, any> = {\n      language: pluginConfig.language || 'en_US',\n      portal: {\n        url: pluginConfig.portalDomain,\n      },\n      theme: {\n        colorPrimary: '#156dff',\n        colorButtonPrimary: '#156dff',\n      },\n      mode: 'SingleSelectFile',\n      onSuccess,\n    };\n\n    const { assetTypes } = type.options;\n    if (assetTypes) {\n      options.assetTypes = assetTypes;\n    }\n\n    loadBynder(() => {\n      window.BynderCompactView.open(options);\n    });\n  };\n\n  const { value, type, markers, level, readOnly } = props;\n\n  let preview;\n  if (value) {\n    if (value.type === 'VIDEO') {\n      preview = (\n        <VideoPlayer\n          controls\n          poster={value.previewImg}\n          sources={[{ src: value.previewUrl }]}\n        />\n      );\n    }\n    if (value.type === 'IMAGE') {\n      preview = (\n        <img\n          alt=\"preview\"\n          src={value.previewUrl}\n          style={{ maxWidth: '100%', height: 'auto' }}\n        />\n      );\n      // TODO: Add preview for document / audio types and empty state\n    }\n  }\n\n  return (\n    <Fieldset\n      markers={markers}\n      //presence={presence.filter(item => item.path[0] === '$' || isInside.includes(item.identity))}\n      legend={type.title}\n      description={type.description}\n      level={level}\n    >\n      <div style={{ textAlign: 'center' }}>{preview}</div>\n\n      <ButtonGrid align=\"start\">\n        <Button\n          disabled={readOnly}\n          inverted\n          title=\"Select an asset\"\n          kind=\"default\"\n          onClick={openMediaSelector}\n        >\n          Browse\n        </Button>\n        <Button\n          disabled={readOnly || !value}\n          color=\"danger\"\n          inverted\n          title=\"Remove asset\"\n          onClick={removeValue}\n        >\n          Remove\n        </Button>\n      </ButtonGrid>\n    </Fieldset>\n  );\n};\n\nexport default BynderInput;\n","const url =\n  'https://ucv.bynder.com/5.0.5/modules/compactview/bynder-compactview-3-latest.js';\n\nexport function loadBynder(callback: () => void) {\n  const existingScript = document.getElementById('bynder');\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = url;\n    script.id = 'bynder';\n    document.body.appendChild(script);\n    script.onload = () => {\n      if (callback) {\n        return callback();\n      }\n      return true;\n    };\n  }\n  if (existingScript && callback) {\n    return callback();\n  }\n  return true;\n}\n"],"names":["VideoPlayer","props","videoNode","useRef","useState","player","setPlayer","useEffect","current","videojs","dispose","React","href","rel","style","marginBottom","className","ref","Component","value","previewUrl","alt","src","width","noImage","name","type","title","fields","inputComponent","preview","getPreviewUrl","asset","previewUrls","files","webImage","url","getVideoUrl","_asset$files","original","_asset$files$original2","getAspectRatio","dimensions","height","markers","level","readOnly","controls","poster","previewImg","sources","maxWidth","Fieldset","legend","description","textAlign","ButtonGrid","align","Button","disabled","inverted","kind","onClick","onChange","options","language","pluginConfig","portal","portalDomain","theme","colorPrimary","colorButtonPrimary","mode","onSuccess","assets","previewImageUrl","aspectRatio","mediaData","_key","_type","id","databaseId","datUrl","transformBaseUrl","_asset$files$transfor","videoUrl","Promise","resolve","reject","img","Image","onload","onerror","err","then","ratio","PatchEvent","from","set","console","log","assetTypes","callback","existingScript","document","getElementById","script","createElement","body","appendChild","loadBynder","window","BynderCompactView","open","color","unset","diffComponent","DiffFromTo","diff","schemaType","previewComponent"],"mappings":"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"}