{"ast":null,"code":"var _jsxFileName = \"/Users/grantwatson/Desktop/DevPlayground/ReactApps/gws/GWS_Portfolio_React/src/components/pages/Tasks/EditTask.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"../../UI/Modal\";\nimport { useState } from 'react';\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../../firebase/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditTask(_ref) {\n  _s();\n\n  let {\n    open,\n    onClose,\n    toEditTitle,\n    toEditDescription,\n    id\n  } = _ref;\n  const [title, setTitle] = useState(toEditTitle);\n  const [description, setDescription] = useState(toEditDescription);\n  /* function to update firestore */\n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const taskDocRef = doc(db, 'tasks', id);\n\n    try {\n      await updateDoc(taskDocRef, {\n        title: title,\n        description: description\n      });\n      onClose();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    modalLable: \"Edit Task\",\n    onClose: onClose,\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      className: \"editTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        onChange: e => setTitle(e.target.value.toUpperCase()),\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => setDescription(e.target.value),\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditTask, \"TchmB0De3CMtZxroHivBEqMixPE=\");\n\n_c = EditTask;\nexport default EditTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["Modal","useState","doc","updateDoc","db","EditTask","open","onClose","toEditTitle","toEditDescription","id","title","setTitle","description","setDescription","handleUpdate","e","preventDefault","taskDocRef","err","alert","target","value","toUpperCase"],"sources":["/Users/grantwatson/Desktop/DevPlayground/ReactApps/gws/GWS_Portfolio_React/src/components/pages/Tasks/EditTask.js"],"sourcesContent":["import Modal from \"../../UI/Modal\"\nimport { useState } from 'react'\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../../firebase/firebase'\n\nfunction EditTask({ open, onClose, toEditTitle, toEditDescription, id }) {\n\n    const [title, setTitle] = useState(toEditTitle)\n    const [description, setDescription] = useState(toEditDescription)\n\n    /* function to update firestore */\n    const handleUpdate = async (e) => {\n        e.preventDefault()\n        const taskDocRef = doc(db, 'tasks', id)\n        try {\n            await updateDoc(taskDocRef, {\n                title: title,\n                description: description\n            })\n            onClose()\n        } catch (err) {\n            alert(err)\n        }\n\n    }\n\n    return (\n        <Modal modalLable='Edit Task' onClose={onClose} open={open}>\n            <form onSubmit={handleUpdate} className='editTask'>\n                <input type='text' name='title' onChange={(e) => setTitle(e.target.value.toUpperCase())} value={title} />\n                <textarea onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n                <button type='submit'>Edit</button>\n            </form>\n        </Modal>\n    )\n}\n\nexport default EditTask"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAASC,EAAT,QAAmB,4BAAnB;;;AAEA,SAASC,QAAT,OAAyE;EAAA;;EAAA,IAAvD;IAAEC,IAAF;IAAQC,OAAR;IAAiBC,WAAjB;IAA8BC,iBAA9B;IAAiDC;EAAjD,CAAuD;EAErE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACO,WAAD,CAAlC;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACQ,iBAAD,CAA9C;EAEA;;EACA,MAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;IAC9BA,CAAC,CAACC,cAAF;IACA,MAAMC,UAAU,GAAGhB,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcM,EAAd,CAAtB;;IACA,IAAI;MACA,MAAMP,SAAS,CAACe,UAAD,EAAa;QACxBP,KAAK,EAAEA,KADiB;QAExBE,WAAW,EAAEA;MAFW,CAAb,CAAf;MAIAN,OAAO;IACV,CAND,CAME,OAAOY,GAAP,EAAY;MACVC,KAAK,CAACD,GAAD,CAAL;IACH;EAEJ,CAbD;;EAeA,oBACI,QAAC,KAAD;IAAO,UAAU,EAAC,WAAlB;IAA8B,OAAO,EAAEZ,OAAvC;IAAgD,IAAI,EAAED,IAAtD;IAAA,uBACI;MAAM,QAAQ,EAAES,YAAhB;MAA8B,SAAS,EAAC,UAAxC;MAAA,wBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,OAAxB;QAAgC,QAAQ,EAAGC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAD,CAAzD;QAAyF,KAAK,EAAEZ;MAAhG;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAU,QAAQ,EAAGK,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAAzC;QAA2D,KAAK,EAAET;MAAlE;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GA9BQR,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}